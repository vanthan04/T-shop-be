name: CI/CD initial

on:
  push:
    branches:
      - initial
jobs:
  discovery:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@v
        with:
          username: ${{vars.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: user-service/Dockerfile
          push: true
          tags: ${{vars.DOCKERHUB_USERNAME}}/discovery-server:latest

  build-user-service:
    needs: discovery
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@v
        with:
          username: ${{vars.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: user-service/Dockerfile
          push: true
          tags: ${{vars.DOCKERHUB_USERNAME}}/user-service:latest

  build-other-service:
    needs: discovery
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api-gateway, product-service, inventory-service, cart-service, order-service, notification-service, payment-service]
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@v
        with:
          username: ${{vars.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{matrix.service}}/Dockerfile
          push: true
          tags: ${{vars.DOCKERHUB_USERNAME}}/${{matrix.service}}:latest

#name: CI/CD initial
#
#on:
#  push:
#    branches:
#      - initial
#jobs:
#  discovery:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v5.0.0
#      - name: Set up JDK 17
#        uses: actions/setup-java@v5.0.0
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: 'maven'
#      - name: Build discovery
#        run: mvn -B -DskipTests clean package -f discovery-server/pom.xml
#  build-api-gateway:
#    needs: discovery
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v5.0.0
#      - name: Set up JDK 17
#        uses: actions/setup-java@v5.0.0
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: 'maven'
#      - name: Build service
#        run: mvn -B -DskipTests clean package -f api-gateway/pom.xml
#  build-user-service:
#    needs: discovery
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v5.0.0
#      - name: Set up Nodejs environment
#        uses: actions/setup-node@v5.0.0
#        with:
#          node-version: '20'
#      - name: start service
#        run: |
#          cd user-service
#          npm install
#          npm run build
#
#  build-other-service:
#    needs: discovery
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        service: [product, inventory, cart, order, notification, payment]
#    steps:
#      - uses: actions/checkout@v5.0.0
#      - name: Set up JDK 17
#        uses: actions/setup-java@v5.0.0
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: 'maven'
#      - name: Build service
#        run: mvn -B -DskipTests clean package -f ${{ matrix.service }}-service/pom.xml

