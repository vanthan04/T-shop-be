services:
  postgres:
    ports:
      - 5555:5432
    image: postgres
    container_name: ms_pg_sql
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-net

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5000:80"
    networks:
      - microservices-net
    restart: unless-stopped
    depends_on:
      - postgres

#  mongodb:
#    container_name: ms_mongo_db
#    image: mongo
#    restart: unless-stopped
#    ports:
#      - "5556:27017"
#    volumes:
#      - mongo:/data/db
#
#    networks:
#      - microservices-net
#
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-admin}
#
#  mongo-express:
#    container_name: ms_mongo_express
#    image: mongo-express
#    restart: unless-stopped
#    ports:
#      - "5001:8081"
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}  # Đăng nhập MongoDB
#      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-admin}  # Đăng nhập MongoDB
#      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME:-admin}
#      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD:-pass}
#      ME_CONFIG_MONGODB_SERVER: mongodb
#    depends_on:
#      - mongodb
#    networks:
#      - microservices-net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: ms_keycloak
    command:
      - start-dev
      - --import-realm
      - --features=scripts
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN:-admin}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-user_service}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    volumes:
      - ./keycloak-config/themes:/opt/keycloak/themes
      - ./keycloak-config/config:/opt/keycloak/data/import
    networks:
      - microservices-net


  kafka:
    container_name: ms_kafka
    image: confluentinc/cp-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@ms_kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093 #container to container: 9092. host to container: 29092, controller: 9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ms_kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      CLUSTER_ID: 9_ISia_zwGINzRvyQ
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - microservices-net


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    ports:
      - "28080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=ms_kafka:9092
    depends_on:
      - kafka
    networks:
      - microservices-net



volumes:
  pgdata:
  pgadmin:
  kafka-data:
  mongo:

networks:
  microservices-net:
    driver: bridge

